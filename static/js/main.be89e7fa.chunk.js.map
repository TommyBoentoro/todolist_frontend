{"version":3,"sources":["Supports/Register.png","Pages/Register.jsx","Redux/Actions/UserAction.js","Pages/EmailConfirmation.jsx","Supports/Login.png","Pages/Login.jsx","Components/CreateToDoModal.jsx","Redux/Actions/todoAction.js","Pages/todolist.jsx","Redux/Reducer/todoReducer.js","Redux/Reducer/userReducer.js","Redux/Reducer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Register","state","error","loading","onRegister","setState","email","value","password","validator","isEmail","length","props","onUSerRegister","className","style","height","width","background","boxShadow","borderRadius","src","registerImage","alt","fontFamily","fontSize","fontWeight","type","ref","e","Placeholder","border","boxSizing","to","color","onClick","disabled","this","user","role","message","React","Component","mapDispatchToProps","dispatch","Axios","post","then","res","console","log","payload","data","catch","err","connect","EmailConfirmation","showForm","onConfirmation","match","params","cat","dataToSend","id","pass","axios","patch","onActivation","for","activationcode","marginTop","login","onLogin","onUserLogin","isRedirect","loginImage","message2","token","response","CreateToDoModal","showModal","onSubmit","title","description","date","localStorage","getItem","onCreateToDo","is_email_confirmed","Modal","toggle","isOpen","ModalBody","lineHeight","placeholder","Data","todolist","setItem","todo","showCreateModal","idData","checkUserVerify","onGetData","onGetToDo","onDoneData","index1","index2","window","location","onDoneToDo","onDeleteData","deleteTodo","onDeleteToDo","onLogout","onuserLogout","class","map","index","fontStyle","val","idx","status","marginLeft","removeItem","initialState","todoReducer","action","userReducer","allReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be89e7fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Register.1948156b.png\";","import React from \"react\"\r\nimport validator from \"validator\"\r\n\r\n\r\n// Redux\r\nimport {connect} from \"react-redux\"\r\nimport {onUSerRegister} from \"./../Redux/Actions/UserAction\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// Import Image\r\nimport registerImage from \"./../Supports/Register.png\"\r\n\r\nclass Register extends React.Component{\r\n\r\n    state = {\r\n        error: null,\r\n        loading: false\r\n    }\r\n\r\n    onRegister = () => {\r\n        this.setState({loading: true})\r\n\r\n       let email = this.email.value\r\n       let password = this.password.value\r\n       \r\n       if(!email || !password) throw this.setState({error: `Data Must be Filled`, loading: false})\r\n       if(!(validator.isEmail(email))) throw this.setState({error: `Email Not Valid`, loading: false})\r\n       if(password.length < 6) throw this.setState({error: `Password Must Contain At Least 6 Characters`, loading: false})\r\n\r\n       \r\n\r\n       this.props.onUSerRegister(email, password)\r\n\r\n      \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"d-flex justify-content-center align-items-center\" style={{height: \"100vh\"}}>\r\n                    <div className=\" d-flex flex-row align-items-center\" style={{height: \"688px\", width: \"1149px\", background: \"#FCFCFC\", boxShadow: \"10px 10px 50px 10px rgba(0,0,0,0.1)\", borderRadius: \"48px\"}}>\r\n                       <div className=\"col-6  d-flex justify-content-center align-items-center\" style={{height: \"500px\"}}>\r\n                            <img src={registerImage} alt=\"Register_img\" style={{width: \"482px\", height: \"404px\"}} />\r\n                       </div>\r\n                       <div className=\"col-6  d-flex flex-column \" style={{height: \"500px\"}}>\r\n                           <div className= \"d-flex flex-column justify-content-center mt-3\" style={{fontFamily: \"Playfair Display\"}}>\r\n                                <div className=\"pt-5\" style={{fontSize: \"30px\",}} >\r\n                                    <h1 style={{fontWeight: \"bolder\"}}>\r\n                                    Register Your Account\r\n                                    </h1>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"pt-3\" style={{fontSize: \"24px\", }}>\r\n                                    <h3 style={{fontWeight: \"bold\"}}>\r\n                                            Email\r\n                                    </h3>\r\n                                    <input type=\"text\" ref={(e)=> this.email=e} Placeholder =\"Input your email\" className=\"form-control\" style={{background: \"#FFFFFF\", border: \"1px solid #AFAFAF\", borderRadius: \"10px\", boxSizing: \"border-box\", fontSize: \"14px\", width: \"345px\"}}/>\r\n                                </div>\r\n                                <div className=\"mt-3\" style={{fontSize: \"24px\", fontWeight: \"bold\"}}>\r\n                                    <h3 style={{fontWeight: \"bold\"}}>\r\n                                            Password\r\n                                    </h3>\r\n                                    <input type=\"password\" ref={(e)=> this.password = e} Placeholder = \"Input your password\" className=\"form-control\" style={{background: \"#FFFFFF\", border: \"1px solid #AFAFAF\", borderRadius: \"10px\", boxSizing: \"border-box\", fontSize: \"14px\", width:\"345px\"}}/>\r\n                                </div>\r\n                                <div className=\"mt-1\">\r\n                                    <span style={{fontSize: \"14px\"}}>\r\n                                        Already Have An Account?\r\n                                    </span>\r\n                                    <span className=\"ml-1\" >\r\n                                        <Link to=\"/login\" style={{color: \"#47B785\"}}>Login</Link>\r\n                                    </span>\r\n                                </div>\r\n                                <br/>\r\n                                <br/>\r\n                                \r\n                                <button type=\"submit\" onClick={() => this.onRegister()} disabled={this.props.user.loading} style={{width: \"132px\", height: \"47px\", background: \"#47B785\", borderRadius: \"20px\", color: \"white\", border: \"white\", fontSize: \"20px\", fontWeight: \"bold\"}} >\r\n                                {\r\n                                    this.props.user.loading?\r\n                                    <div className=\"spinner-border text-light\" role=\"status\" style={{width : \"25px\", height:\"25px\"}}>\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                    </div> \r\n                                    :\r\n                                    `Register`\r\n                                }\r\n                                </button>\r\n\r\n                                <h6 className=\"mt-1 text-danger\">\r\n                                    {\r\n                                        \r\n                                        this.props.user.message?\r\n                                        this.props.user.message\r\n                                        :\r\n                                        this.state.error\r\n                                            \r\n                                    }\r\n                                </h6>\r\n                           </div>\r\n                           \r\n                       </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                {/* <div> */}\r\n                    {/* <div className=\"col-12\"> \r\n                        <h1 className=\" mt-5\">\r\n                            Page Register\r\n                        </h1>\r\n                    </div> */}\r\n                {/* <div className=\"mt-5 col-5\">\r\n                    \r\n                        <div className=\"form-group\">\r\n                            <label >Email address</label>\r\n                            <input type=\"email\" ref={(e)=> this.email=e} className=\"form-control\" />\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Register Your Account</small>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label >Password</label>\r\n                            <input type=\"password\" ref={(e)=> this.password = e} className=\"form-control\" />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <span>\r\n                                Already Have An Account?  \r\n                            </span>\r\n                            <span className=\"ml-1\">\r\n                                <Link to=\"/login\">Login</Link> \r\n                            </span>                      \r\n                        </div>\r\n                        \r\n                        <button type=\"submit\" onClick={() => this.onRegister()} disabled={this.props.user.loading} className=\"btn btn-success w-100 mt-3\">\r\n                            {\r\n                                this.props.user.loading?\r\n                                <div className=\"spinner-border text-light\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                                </div> \r\n                                :\r\n                                `Register`\r\n                            }\r\n                        </button>\r\n                           \r\n\r\n                        <h6 className=\"mt-3 text-danger\">\r\n                            {this.state.error}\r\n                            {\r\n                                this.props.user.message\r\n                            }\r\n                        </h6>\r\n                </div>  */}\r\n                {/* </div> */}\r\n                              \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUSerRegister\r\n}\r\n\r\nconst mapStateToProps = (state)=>  {\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","\r\nimport Axios from \"axios\"\r\n\r\nexport const onUSerRegister = (email,password) => {\r\n    return(dispatch) => {\r\n        dispatch(\r\n            {\r\n                type: `LOADING`\r\n            }\r\n        )\r\n        Axios.post(`http://localhost:4000/authentic-system/register`, {email: email, password: password})\r\n        .then((res)=> {\r\n            console.log(res)\r\n            dispatch(\r\n                {\r\n                    type: `AUTH_SUCCESS`,\r\n                    payload: res.data.message\r\n                }\r\n            )\r\n        })\r\n        .catch((err)=> {\r\n            console.log(err)\r\n            dispatch(\r\n                {\r\n                    type: `AUTH_ERROR`,\r\n                    payload: err.res.data.message\r\n                }\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\n// export const onUserLogin = (data) => {\r\n//     return(dispatch) => {\r\n//         dispatch({\r\n//             type : `LOADING`\r\n//         })\r\n//         Axios.post(`http://localhost:4000/authentic-system/login`, data)\r\n//         .then((res) => {\r\n//             console.log(res.data)\r\n//         })\r\n//         .catch((err)=> {\r\n//             console.log(err)\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const onUserLogin = (data) => {\r\n    return(dispatch) => {\r\n        dispatch ({\r\n            type : `LOADING`\r\n        })\r\n        Axios.post(`http://localhost:4000/authentic-system/login`, data)\r\n        .then((res)=> {\r\n            console.log(res.data.message)\r\n            if(res.data.error === false){\r\n                \r\n                dispatch(\r\n                    {\r\n                        type: `LOGIN_SUCCESS`,\r\n                        payload: res.data.data.token\r\n                    }\r\n                )\r\n            }else {\r\n                dispatch(\r\n                    {\r\n                        type: `LOGIN_ERROR`,\r\n                        payload: res.data.message\r\n                    }\r\n                )\r\n            }           \r\n        })\r\n        .catch((err)=> {\r\n            dispatch(\r\n                {\r\n                    type: `LOGIN_ERROR`,\r\n                    payload: err.response.data.message\r\n                    \r\n                }\r\n            )\r\n            \r\n        })\r\n     \r\n    }\r\n}\r\n\r\nexport const onuserLogout = (data) => {\r\n    return(dispatch) => {\r\n        Axios.post(`http://localhost:4000/authentic-system/logout`, data)\r\n        .then((res)=> {\r\n            console.log(res.data)\r\n            localStorage.removeItem(\"my-tkn\")\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkUserVerify = (token) => {\r\n    return(dispatch) => {\r\n        Axios.post(`http://localhost:4000/authentic-system/user-verify`, {token})\r\n        .then((res) => {\r\n            console.log(res.data.is_email_confirmed)\r\n            dispatch({\r\n                type: `CHECK_USER_VERIFY_SUCCESS`,\r\n                payload: res.data.is_email_confirmed\r\n            })\r\n        })\r\n        .catch((err) => {\r\n           dispatch({\r\n               type: `CHECK_USER_VERIFY_ERROR`,\r\n               payload: err.response.data.message\r\n           })\r\n        })\r\n    }\r\n}","import axios from \"axios\"\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// Import Image\r\nimport registerImage from \"./../Supports/Register.png\"\r\n\r\nclass EmailConfirmation extends React.Component{\r\n\r\n    state = {\r\n        message: null,\r\n        error: false,\r\n        showForm: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.onConfirmation()\r\n    }\r\n\r\n    onConfirmation = () => {\r\n        let category = this.props.match.params.cat\r\n\r\n        if(category === \"true\"){\r\n            this.setState ({showForm: true})\r\n        }else{\r\n            let dataToSend = {\r\n                id : this.props.match.params.id,\r\n                password: this.props.match.params.pass\r\n            }\r\n    \r\n                axios.patch(`http://localhost:4000/authentic-system/email-confirmation`, {dataToSend})\r\n                .then ((res)=> {\r\n                    this.setState({error: res.data.error})\r\n                    this.setState({message: res.data.message})\r\n                })\r\n                .catch ((err) => {\r\n                    console.log(err)\r\n                })\r\n        }    \r\n     }\r\n\r\n     onActivation = () => {\r\n\r\n     }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            \r\n            this.state.showForm?\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <div className=\"col-12\"> \r\n                        <h1 className=\" mt-5\">\r\n                            Input Your Code\r\n                        </h1>\r\n                    </div>\r\n                        <div className=\"mt-5 col-5\">                        \r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Activation Code</label>\r\n                                <input type=\"text\" ref={(e)=> this.activationcode=e} className=\"form-control\" />\r\n                            </div>\r\n                            \r\n                            <button type=\"submit\" onClick={() => this.onActivation()} className=\"btn btn-success w-100\">\r\n                                Submit\r\n                            </button>\r\n                        </div> \r\n                    </div>\r\n                                \r\n                </div>\r\n           :\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex justify-content-center align-items-center\" style={{height: \"100vh\"}}>\r\n                        <div className=\" d-flex flex-column align-items-center\" style={{height: \"430px\", width: \"393px\", background: \"#FCFCFC\", boxShadow: \"10px 10px 50px 10px rgba(0,0,0,0.1)\", borderRadius: \"48px\"}}>\r\n                            \r\n                            <div className= \"d-flex flex-column justify-content-center\" style={{fontFamily: \"Playfair Display\"}}>\r\n                                    <div className=\"mt-5\" style={{fontSize: \"24px\"}} >\r\n                                        <p style={{fontWeight: \"bolder\"}}>\r\n                                            {\r\n                                                this.state.message\r\n                                            }\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\" d-flex justify-content-center mt-2\">\r\n                                        <img src={registerImage} alt=\"Register_img\" style={{width: \"232px\", height: \"194px\"}} />\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-center\" style={{marginTop: \"35px\"}}>\r\n                                        <Link to=\"/login\">\r\n                                            <button style={{width: \"132px\", height: \"47px\", background: \"#47B785\", borderRadius: \"20px\", color: \"white\", border: \"white\", fontSize: \"14px\", fontWeight: \"bold\"}} > Continue Login</button>\r\n                                        </Link>\r\n                                    </div>\r\n                                    \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    {/* <div className = \"row justify-content-center align-items-center\" style={{height: \"100vh\"}}>\r\n                        <div className=\"col-5 text-center border border-success px-3 py-5 rounded\">\r\n                            <h1>\r\n                                {\r\n                                    this.state.error?\r\n                                        null\r\n                                    : \r\n                                    `Welcome With Us!`\r\n                                }\r\n                            </h1>\r\n                            <p>\r\n                                {\r\n                                    this.state.message\r\n                                }\r\n                            </p>\r\n                            <Link to=\"/login\">\r\n                            <button className=\"btn btn-success\" > Continue Login</button>\r\n                            </Link>\r\n                            \r\n                        </div>\r\n                    </div> */}\r\n\r\n                </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default EmailConfirmation","export default __webpack_public_path__ + \"static/media/Login.5fde75e1.png\";","import React from \"react\"\r\nimport validator from \"validator\"\r\nimport {connect} from \"react-redux\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\n\r\n// Action\r\nimport {onUserLogin} from \"./../Redux/Actions/UserAction\"\r\n\r\n// Import Image\r\nimport loginImage from \"./../Supports/Login.png\"\r\n\r\n\r\nclass login extends React.Component{\r\n\r\n    state = {\r\n        error: null\r\n    }\r\n\r\n    onLogin = () => {\r\n\r\n        let email = this.email.value\r\n        let password = this.password.value\r\n\r\n        let data = {\r\n            email: this.email.value,\r\n            password: this.password.value\r\n        }\r\n\r\n        \r\n        \r\n        if(!email || !password) throw this.setState({error: `Data Must be Filled`})\r\n        if(!(validator.isEmail(email))) throw this.setState({error: `Email Not Valid`, loading: false})\r\n        \r\n        this.props.onUserLogin(data)\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.props.user.isRedirect){\r\n           return(\r\n            <Redirect to=\"/home\"/>\r\n           )\r\n        }\r\n            return(      \r\n                <div className=\"container\">\r\n                    <div className=\"d-flex justify-content-center align-items-center\" style={{height: \"100vh\"}}>\r\n                        <div className=\" d-flex flex-row align-items-center\" style={{height: \"688px\", width: \"1149px\", background: \"#FCFCFC\", boxShadow: \"10px 10px 50px 10px rgba(0,0,0,0.1)\", borderRadius: \"48px\"}}>\r\n                        <div className=\"col-6  d-flex justify-content-center align-items-center\" style={{height: \"500px\"}}>\r\n                                <img src={loginImage} alt=\"Register_img\" style={{width: \"482px\", height: \"404px\"}} />\r\n                        </div>\r\n                        <div className=\"col-6  d-flex flex-column \" style={{height: \"500px\"}}>\r\n                            <div className= \"d-flex flex-column justify-content-center mt-3\" style={{fontFamily: \"Playfair Display\"}}>\r\n                                    <div className=\"pt-5\" style={{fontSize: \"30px\",}} >\r\n                                        <h1 style={{fontWeight: \"bolder\"}}>\r\n                                        Login\r\n                                        </h1>\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div className=\"pt-3\" style={{fontSize: \"24px\", }}>\r\n                                        <h3 style={{fontWeight: \"bold\"}}>\r\n                                                Email\r\n                                        </h3>\r\n                                        <input type=\"text\" ref={(e)=> this.email=e} Placeholder =\"Input your email\" className=\"form-control\" style={{background: \"#FFFFFF\", border: \"1px solid #AFAFAF\", borderRadius: \"10px\", boxSizing: \"border-box\", fontSize: \"14px\", width: \"345px\"}}/>\r\n                                    </div>\r\n                                    <div className=\"mt-3\" style={{fontSize: \"24px\", fontWeight: \"bold\"}}>\r\n                                        <h3 style={{fontWeight: \"bold\"}}>\r\n                                                Password\r\n                                        </h3>\r\n                                        <input type=\"password\" ref={(e)=> this.password = e} Placeholder = \"Input your password\" className=\"form-control\" style={{background: \"#FFFFFF\", border: \"1px solid #AFAFAF\", borderRadius: \"10px\", boxSizing: \"border-box\", fontSize: \"14px\", width:\"345px\"}}/>\r\n                                    </div>\r\n                                    \r\n                                    <br/>\r\n                                    <br/>\r\n                                    \r\n                                    <button type=\"submit\" onClick={()=> this.onLogin()}  style={{width: \"132px\", height: \"47px\", background: \"#47B785\", borderRadius: \"20px\", color: \"white\", border: \"white\", fontSize: \"20px\", fontWeight: \"bold\"}} >\r\n                                        Login\r\n                                    </button>\r\n\r\n                                    <p className=\"mt-1 text-danger\">\r\n                                        {\r\n                                            this.props.user.message2?\r\n                                            this.props.user.message2\r\n                                            :\r\n                                            this.state.error\r\n                                        }\r\n                                    </p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    {/* <div>\r\n                        <div className=\"col-12\"> \r\n                        <h1 className=\" mt-5\">\r\n                            Login Page\r\n                        </h1>\r\n                    </div>\r\n                        <div className=\"mt-5 col-5\">\r\n                            \r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputEmail1\">Email address</label>\r\n                                    <input type=\"email\" ref={(e)=> this.email=e} className=\"form-control\" />\r\n                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputPassword1\">Password</label>\r\n                                    <input type=\"password\" ref={(e)=> this.password = e} className=\"form-control\" />\r\n                                </div>\r\n                                \r\n                                <button type=\"submit\" onClick={()=> this.onLogin()} className=\"btn btn-success w-100\">\r\n                                    Login\r\n                                </button>\r\n        \r\n                                <p className= \"mt-3 text-danger\">\r\n                                    {\r\n                                      this.props.user.message\r\n                                    }\r\n                                </p>\r\n                                \r\n                                \r\n        \r\n                            \r\n                        </div> \r\n                    </div> */}\r\n                                  \r\n                </div>\r\n                )\r\n        \r\n     \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUserLogin\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (login)","import React from \"react\"\r\nimport {Modal, ModalBody} from \"reactstrap\"\r\nimport {connect} from \"react-redux\"\r\n\r\n// Import Action\r\nimport {onCreateToDo} from \"./../Redux/Actions/todoAction\"\r\n\r\n\r\nclass CreateToDoModal extends React.Component {\r\n\r\n    state = {\r\n        showModal: false\r\n    }\r\n    \r\n    onSubmit = () => {\r\n        let title = this.title.value\r\n        let description = this.description.value\r\n        let date = this.date.value\r\n        let token = localStorage.getItem(`my-tkn`)\r\n\r\n        let dataToSend = {\r\n            title,\r\n            description,\r\n            date,\r\n            token\r\n        }\r\n\r\n        this.props.onCreateToDo(dataToSend)\r\n        this.setState({showModal: false})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           <>\r\n            <div style = {{fontFamily: \"Playfair Display\"}}>\r\n                <input type=\"button\" value=\"Add Todo\" onClick={() => this.setState({showModal: true})} disabled={this.props.user.is_email_confirmed === 0? true : false} style={{width: \"132px\", height: \"47px\", background: \"#47B785\", borderRadius: \"20px\", color: \"white\", border: \"white\", fontSize: \"20px\", fontWeight: \"bold\"}}/>\r\n                    <Modal toggle={() => this.setState({showModal: false})} isOpen={this.state.showModal} >\r\n                        <ModalBody className=\"px-5 py-5\">\r\n                            <div style = {{fontFamily: \"Playfair Display\", fontSize: \"30px\", fontWeight: \"900\", marginTop: \"-10px\", lineHeight: \"200%\"}}>\r\n                                <p>\r\n                                    Create New ToDo\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"form-group\" style = {{fontFamily: \"Playfair Display\", fontSize: \"20px\" , fontWeight: \"bold\", marginTop: \"40px\"}}>\r\n                                <label>Title</label>\r\n                                <input type=\"text\" ref={e => this.title = e} className=\"form-control\" placeholder=\"Input title\" style={{borderRadius: \"25px\", fontSize:\"14px\", marginTop: \"-5px\"}}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-1\" style = {{fontFamily: \"Playfair Display\", fontSize: \"20px\", fontWeight: \"bold\"}}>\r\n                                <label>Description</label>\r\n                                <input type=\"text\" ref={e => this.description = e} className=\"form-control\" placeholder=\"Input description\" style={{borderRadius: \"25px\", fontSize:\"14px\", marginTop: \"-5px\"}} />\r\n                            </div>  \r\n                            \r\n                            <div className=\"form-group mt-1\" style = {{fontFamily: \"Playfair Display\", fontSize: \"20px\" , fontWeight: \"bold\"}}>\r\n                                <label>Date</label>\r\n                                <input type=\"Datetime-local\" ref={e => this.date = e} className=\"form-control\" placeholder=\"Input Date\" style={{borderRadius: \"25px\", fontSize:\"14px\", marginTop: \"-5px\"}} />\r\n                            </div>\r\n                            \r\n                            <div className=\"d-flex justify-content-end\" style={{marginTop : \"70px\"}}>\r\n                        \r\n                                <input type=\"button\" value=\"Submit\" onClick={() => this.onSubmit()} style={{width: \"100px\", height: \"35px\", background: \"#47B785\", borderRadius: \"20px\", color: \"white\", border: \"white\" ,fontWeight: \"700\"}} />\r\n                            </div>\r\n                            \r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n            \r\n           </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        todo: state.todo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onCreateToDo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateToDoModal)","import Axios from \"axios\"\r\n\r\nexport const onCreateToDo = (dataToSend) => {\r\n    return(dispatch) => {\r\n\r\n        let data = {\r\n            token : dataToSend.token\r\n        }\r\n        dispatch (\r\n            {\r\n                type: `LOADING`\r\n            }\r\n        )\r\n        Axios.post (`http://localhost:4000/todo/create`, dataToSend)\r\n        .then ((res)=> {\r\n            Axios.post(`http://localhost:4000/todo/get`, data)\r\n            .then((response)=> {\r\n                console.log(response.data.Data[0].todolist[0].id)\r\n                localStorage.setItem(\"id-data\", response.data.Data[0].todolist[0].id )\r\n                \r\n                dispatch( \r\n                    {\r\n                        type: `TODO_SUCCESS`,\r\n                        payload: response.data.Data\r\n                    }\r\n                )\r\n            })\r\n            .catch((error)=>{\r\n                dispatch ({\r\n                    type: `TODO_ERROR`,\r\n                    payload: error.response.data.message\r\n                })\r\n            })\r\n            \r\n        })\r\n        .catch ((err) => {\r\n            dispatch(\r\n                {\r\n                    type: `TODO_ERROR`,\r\n                    payload: err.response.data.message\r\n                }\r\n            )\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const onGetToDo = (data) => {\r\n    return(dispatch) => {\r\n        Axios.post(`http://localhost:4000/todo/get`, data)\r\n            .then((response)=> {\r\n                dispatch(\r\n                    {\r\n                        type: `TODO_SUCCESS`,\r\n                        payload: response.data.Data\r\n                    }\r\n                )\r\n            })\r\n            .catch((error)=>{\r\n                dispatch ({\r\n                    type: `TODO_ERROR`,\r\n                    payload: error.response\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const onDoneToDo = (data) => {\r\n    return(dispatch) => {\r\n        Axios.post(`http://localhost:4000/todo/done`, data)\r\n            .then((response) => {    \r\n                console.log(response)\r\n                // dispatch({\r\n                //     type: `DONE_SUCCESS`,\r\n                //     payload: response.data.data\r\n                // })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                // dispatch({\r\n                //     type: `DONE_ERROR`,\r\n                //     payload: error.response\r\n                // })\r\n            })\r\n    }\r\n}\r\n\r\nexport const onDeleteToDo = (deleteTodo) => {\r\n    return(dispatch) => {\r\n        Axios.post(`http://localhost:4000/todo/delete`,deleteTodo)\r\n        .then((response)=> {\r\n            console.log(response)\r\n            dispatch({\r\n                type: `DELETE_DONE`,\r\n                payload: response.data.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            dispatch({\r\n                type: `DELETE_ERROR`,\r\n                payload: error.response\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n","\r\nimport React, { isValidElement } from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\n// Import Action\r\nimport {checkUserVerify} from \"./../Redux/Actions/UserAction\"\r\nimport {onuserLogout} from \"./../Redux/Actions/UserAction\"\r\nimport {onGetToDo} from \"./../Redux/Actions/todoAction\"\r\nimport {onDoneToDo} from \"./../Redux/Actions/todoAction\"\r\nimport {onDeleteToDo} from \"./../Redux/Actions/todoAction\"\r\n\r\n\r\n// Import Component \r\nimport CreateModal from \"./../Components/CreateToDoModal\"\r\nimport { findRenderedDOMComponentWithClass } from \"react-dom/test-utils\"\r\nimport { CardTitle } from \"reactstrap\"\r\n\r\nclass todolist extends React.Component{\r\n\r\n    state = {\r\n        showCreateModal : false,\r\n        idData : null\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.checkUserVerify()\r\n        this.onGetData()\r\n    \r\n    }\r\n\r\n    checkUserVerify = () => {\r\n        let token = localStorage.getItem(`my-tkn`)\r\n        \r\n\r\n        this.props.checkUserVerify(token)\r\n    }\r\n\r\n    onGetData = () => {\r\n        let token = localStorage.getItem(`my-tkn`)\r\n\r\n        let data = {\r\n            token\r\n        }\r\n\r\n        this.props.onGetToDo(data)\r\n    }\r\n\r\n    onDoneData = (index1,index2) => {\r\n        let token = localStorage.getItem(`my-tkn`)\r\n        \r\n        let id = this.props.todo.data[index1].todolist[index2].id\r\n       \r\n        \r\n        \r\n        let data = {\r\n            token,\r\n            id\r\n            \r\n        }\r\n        console.log(data)\r\n        \r\n        window.location = \"/home\"\r\n\r\n        this.props.onDoneToDo(data)\r\n    }\r\n\r\n    onDeleteData = (index1,index2) => {\r\n        \r\n        let token = localStorage.getItem(`my-tkn`)\r\n        \r\n        let id = this.props.todo.data[index1].todolist[index2].id\r\n        \r\n        \r\n        let deleteTodo = {\r\n            token,\r\n            id\r\n            \r\n        }\r\n\r\n        window.location = \"/home\"\r\n\r\n\r\n        this.props.onDeleteToDo(deleteTodo)\r\n    }\r\n\r\n    onLogout = () => {\r\n        let token = localStorage.getItem(`my-tkn`)\r\n        \r\n        let data = {\r\n            token\r\n        }\r\n        console.log(data)\r\n\r\n        \r\n        this.props.onuserLogout(data)\r\n    }\r\n    \r\n    render(){\r\n        if(this.props.todo.data === null) {\r\n            return(\r\n                <div>\r\n                    Loading...\r\n                </div>\r\n            )\r\n        }\r\n        // Note = \r\n        // 1. Page Register \r\n        // 2. Page Login\r\n        // 3. Home ada Logout --> kalo di logout hapus token dan balik ke register\r\n        return(\r\n           <> \r\n           <div style = {{height: \"100vh\", background: \"#F6F6F6\"}}>\r\n                <div className=\"container \">\r\n                <nav class=\"navbar navbar-light bg-light d-flex justify-content-end\">\r\n                     <Link to=\"/\" style={{fontFamily: \"Playfair Display\", fontSize: \"24px\", color: \"#47B785\", fontWeight: \"bold\"}}>Logout</Link>\r\n                     {/* <input type=\"button\" value =\"logout\" className=\"btn btn-primary\" onClick= {()=> this.onLogout()} /> */}\r\n                </nav>\r\n                    \r\n                    <div className=\"row justify-content-center py-5\">\r\n                        <div className=\"col-8\">\r\n                            { \r\n                                this.props.user.is_email_confirmed === 0?\r\n                                <div class=\"alert alert-danger\" role=\"alert\"> \r\n                                    Activate your account!\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-8  py-3\" style = {{fontFamily: \"Playfair Display\"}}>\r\n                                {/* Button Selection */}\r\n                                <div className=\"col-12 mb-3\">\r\n                                    <CreateModal/>\r\n                                    <hr/>\r\n                                </div>\r\n\r\n                                <div className=\"row px-3\">\r\n                                    {                                         \r\n                                        this.props.todo.data.map((value,index) => {\r\n                                            return(\r\n                                                <>\r\n                                                    <div className=\"col-12\">\r\n                                                        <h4 style={{fontWeight: \"bolder\", fontStyle: \"italic\", fontSize: \"20px\" }}>\r\n                                                            {value.date}\r\n                                                        </h4>\r\n                                                    </div>\r\n\r\n                                                    {\r\n                                                        value.todolist.map((val,idx)=> {\r\n                                                            if(val.status === 1 ){\r\n                                                                return(\r\n                                                                    <div className =\"col-12\">\r\n                                                                        <span style={{fontSize: '18px'}}>\r\n                                                                            {val.title} - {val.description} \r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            }else{\r\n                                                                return(\r\n                                                                    <div className=\"col-12 d-flex justify-content-between \" style={{width: \"500px\"}}>\r\n                                                                    <div >\r\n                                                                            <span style={{fontSize: '18px'}}>\r\n                                                                                {val.title} - {val.description}\r\n                                                                            </span>\r\n                                                                            \r\n                                                                    </div>\r\n                                                                    <div className=\"ml-auto\">\r\n                                                                            <input type=\"button\" value=\"Done\" onClick={() => this.onDoneData(index,idx)} className=\"btn btn-success btn-sm\"  />\r\n                                                                            <input type=\"button\" value=\"Delete\" onClick={() => this.onDeleteData(index,idx)} className=\"btn btn-danger btn-sm\" style={{marginLeft: \"20px\" }} />\r\n                                                                    </div>\r\n                                                                   \r\n                                                                    <br /><br/>\r\n                                                                </div>\r\n                                                                )\r\n                                                            }\r\n                    \r\n                                                        })\r\n                                                        \r\n                                                    }\r\n                                                    <br/>\r\n                                                    <br/>\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                        \r\n                                    }                         \r\n                                </div>\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n            </div>\r\n           </div>\r\n            \r\n            \r\n           </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    checkUserVerify, onGetToDo, onDoneToDo, onDeleteToDo, onuserLogout\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        user: state.user,\r\n        todo: state.todo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (todolist)","let initialState = {\r\n    loading: false,\r\n    data: null,\r\n    message: null,\r\n   \r\n}\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case `LOADING`: \r\n            return {...state, loading: true}   \r\n        case `TODO_SUCCESS` :\r\n            return {...state, data: action.payload, loading: false}\r\n        case `TODO_ERROR` :\r\n            return {...state, message: action.payload, loading: false}\r\n        case `DONE_SUCCESS` :\r\n            return {...state, data:action.payload}\r\n        case `DONE_ERROR`:\r\n            return{...state, message: action.payload}\r\n        case `DELETE_ERROR`:\r\n            return{...state, data:action.payload}\r\n        case `DELETE_ERROR`:\r\n            return{...state, message: action.payload}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoReducer","let initialState = {\r\n    loading: false,\r\n    token : null,\r\n    message: null,\r\n    isRedirect: false,\r\n    is_email_confirmed: null,\r\n    message2: null\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case `LOADING`: \r\n            return {...state, loading: true}\r\n        case `AUTH_SUCCESS`:\r\n            return {...state, message: action.payload, loading: false}\r\n        case `AUTH_ERROR`:\r\n            return {...state, message: action.payload, loading: false}\r\n        case `LOGIN_SUCCESS`:\r\n            return {...state, token: action.payload, isRedirect: true}\r\n        case `LOGIN_ERROR` :\r\n            return {...state, message2: action.payload}\r\n        case `CHECK_USER_VERIFY_SUCCESS` :\r\n            return {...state, is_email_confirmed: action.payload}\r\n        case `CHECK_USER_VERIFY_ERROR`:\r\n            return {...state, message: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import {combineReducers} from \"redux\"\r\nimport todoReducer from \"./todoReducer\"\r\nimport userReducer from \"./userReducer\"\r\n\r\nconst allReducer = combineReducers({\r\n    user: userReducer,\r\n    todo: todoReducer\r\n}) \r\n\r\nexport default allReducer","import React from \"react\"\nimport {BrowserRouter, Switch, Route}  from \"react-router-dom\"\nimport Register from \"./Pages/Register\"\nimport EmailConfirmation from \"./Pages/EmailConfirmation\"\nimport login from \"./Pages/Login\"\nimport todolist from \"./Pages/todolist\"\n\n// Redux\nimport {applyMiddleware, createStore} from \"redux\"\nimport {Provider} from \"react-redux\"\nimport thunk from \"redux-thunk\"\nimport allReducer from \"./Redux/Reducer/index\"\n\nconst store = createStore(allReducer, applyMiddleware(thunk))\n\nfunction App(){\n  return(\n   <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path= \"/\" component={Register} />\n          <Route path=\"/confirmation/:id/:pass/:cat\" component={EmailConfirmation}/>\n          <Route path=\"/login\" component={login}/>\n          <Route path=\"/home\" component={todolist}/>\n        </Switch>\n      </BrowserRouter>\n   </Provider>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}